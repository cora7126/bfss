<?php
//namespace Drupal\Core\Datetime;

/**
* Implementation of hook_form_alter
**/
function mymodule_form_alter(&$form, Drupal\Core\Form\FormStateInterface $form_state, &$form_id, $activity=''){
	 // if($form_id == 'user_form'){
              //kint($form_state);die;
		/*	$form['image_with_preview'] = [
                            '#type' => 'managed_file',
                            '#title' => t('Image with preview'),
                            '#upload_validators' => [
                              'file_validate_extensions' => ['gif png jpg jpeg'],
                              'file_validate_size' => [25600000],
                            ],
                            '#theme' => 'image_widget',
                            '#preview_image_style' => 'medium',
                            '#upload_location' => 'public://',
                            '#required' => FALSE,
                          ];
                        
                        $form['jodi'] = array(
                            '#type' => 'textfield',
                            '#title' => t('Jodi'),
                            '#required' => FALSE,
                             '#weight' => '3',

                          );
                        $form['blogs'] = array(
                            '#type' => 'textfield',
                            '#title' => t('Blogs'),
                            '#required' => FALSE,
                             '#weight' => '4',
                            '#prefix' => '<div class="form-element">',

                          );
                        $form['mobile'] = array(
                            '#type' => 'textfield',
                            '#title' => t('Mobile'),
                            '#required' => FALSE,
                             '#weight' => '5',
                            '#prefix' => '<div class="form-element">',

                          );
                        $form['field_dob'] = array(
                           '#type' => 'date',
                           '#title' => 'Enter Your Date of Birth',
                           '#required' => TRUE,
                           '#default_value' => array('month' => 9, 'day' => 6, 'year' => 1962),
                           '#format' => 'm/d/Y',
                           '#description' => t('i.e. 09/06/2016'),
                            '#weight' => '6',
                            '#suffix' => '</div>'
                       ); */

                        

                        
//			  $form['actions']['submit']['#submit'][]  = 'mymodule_submit';
			  // echo '<pre>';print_r($form['custom_content_block_image']);die;
			//return $form;
		//} 
	}
function mymodule_submit($form, Drupal\Core\Form\FormStateInterface &$form_state) {
	// echo 'here';die;
	// kint($form);die;
		$tets = $form_state->getValue('custom_content_block_image');
		//echo '<pre>'; print_r($tets);die;
	
	
	   // if (isset($form_state['values']['custom_content_block_image'])) {
		  // echo 'heer';die;
		// $file = file_load($form_state['values']['custom_content_block_image']);

		// $file->status = FILE_STATUS_PERMANENT;

		// $file_saved =file_save($file);
		////Record that the module is using the file. 
		// file_usage_add($file_saved, 'mymodule_form_alter', 'custom_content_block_image', $file_saved->fid); 
		// echo $file_saved->fid;die;
    // }	 
	
}

function mymodule_preprocess_image_widget(&$variables) {
    $element = $variables['element'];

    $variables['attributes'] = array('class' => array('image-widget', 'js-form-managed-file', 'form-managed-file', 'clearfix'));

    if (!empty($element['fids']['#value'])) {
      $file = reset($element['#files']);
      $element['file_' . $file->id()]['filename']['#suffix'] = ' <span class="file-size">(' . format_size($file->getSize()) . ')</span> ';
      $file_variables = array(
        'style_name' => $element['#preview_image_style'],
        'uri' => $file->getFileUri(),
      );

      // Determine image dimensions.
      if (isset($element['#value']['width']) && isset($element['#value']['height'])) {
        $file_variables['width'] = $element['#value']['width'];
        $file_variables['height'] = $element['#value']['height'];
      } else {
        $image = \Drupal::service('image.factory')->get($file->getFileUri());
        if ($image->isValid()) {
          $file_variables['width'] = $image->getWidth();
          $file_variables['height'] = $image->getHeight();
        }
        else {
          $file_variables['width'] = $file_variables['height'] = NULL;
        }
      }

      $element['preview'] = array(
        '#weight' => -10,
        '#theme' => 'image_style',
        '#width' => $file_variables['width'],
        '#height' => $file_variables['height'],
        '#style_name' => $file_variables['style_name'],
        '#uri' => $file_variables['uri'],
      );

      // Store the dimensions in the form so the file doesn't have to be
      // accessed again. This is important for remote files.
      $element['width'] = array(
        '#type' => 'hidden',
        '#value' => $file_variables['width'],
      );
      $element['height'] = array(
        '#type' => 'hidden',
        '#value' => $file_variables['height'],
      );
    }

    $variables['data'] = array();
    foreach (\Drupal\Core\Render\Element::children($element) as $child) {
      $variables['data'][$child] = $element[$child];
    }
}