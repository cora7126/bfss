<?php
use Drupal\Core\Url;
use Symfony\Component\HttpFoundation\RedirectResponse;
/*
 * HOOK_theme
 */
function bfss_assessment_theme() {
	      $month_options = [];
        for ($m = 1; $m <= 12; ++$m) {
          $time = mktime(0, 0, 0, $m, 1);
          $month_options[date('m', $time)] = date('F', $time);
        }

        $year_options = [];

        for ($i = date("Y"); $i < date("Y") + 10; $i++) {
          $year_options[$i] = $i;
        }
    	$states = [
        'AL' => 'AL',
        'AK' => 'AK',
        'AS' => 'AS',
        'AZ' => 'AZ',
        'AR' => 'AR',
        'CA' => 'CA',
        'CO' => 'CO',
        'CT' => 'CT',
        'DE' => 'DE',
        'DC' => 'DC',
        'FM' => 'FM',
        'FL' => 'FL',
        'GA' => 'GA',
        'GU' => 'GU',
        'HI' => 'HI',
        'ID' => 'ID',
        'IL' => 'IL',
        'IN' => 'IN',
        'IA' => 'IA',
        'KS' => 'KS',
        'KY' => 'KY',
        'LA' => 'LA',
        'ME' => 'ME',
        'MH' => 'MH',
        'MD' => 'MD',
        'MA' => 'MA',
        'MI' => 'MI',
        'MN' => 'MN',
        'MS' => 'MS',
        'MO' => 'MO',
        'MT' => 'MT',
        'NE' => 'NE',
        'NV' => 'NV',
        'NH' => 'NH',
        'NJ' => 'NJ',
        'NM' => 'NM',
        'NY' => 'NY',
        'NC' => 'NC',
        'ND' => 'ND',
        'MP' => 'MP',
        'OH' => 'OH',
        'OK' => 'OK',
        'OR' => 'OR',
        'PW' => 'PW',
        'PA' => 'PA',
        'PR' => 'PR',
        'RI' => 'RI',
        'SC' => 'SC',
        'SD' => 'SD',
        'TN' => 'TN',
        'TX' => 'TX',
        'UT' => 'UT',
        'VT' => 'VT',
        'VI' => 'VI',
        'VA' => 'VA',
        'WA' => 'WA',
        'WV' => 'WV',
        'WI' => 'WI',
        'WY' => 'WY',
        'AE' => 'AE',
        'AA' => 'AA',
        'AP' => 'AP',
       ];
  		$country=array('usa'=>'USA','canada'=>'Canada');
		
return [
    'page_assessment' => [
        'variables' => [
          'data'=>[],
        ],
        'template'=>'custom/page-assessment',
    ],
    'modal_assessment' => [
        'variables' => [
          'data'=>[],
        ],
        'template'=>'custom/modal-assessment',
    ],
    'assessment_success' => [
      'variables' => [
          'message'=> null,
        ],
        'template'=>'custom/assessment-success',
    ],
    'atheltic__profile' => [
      'variables' => [
          'data'=> null,
        ],
        'template'=>'custom/atheltic--profile',
    ],
    'upcoming_group_assessments' => [
      'variables' => [
          'data'=> null,
        ],
        'template'=>'custom/upcoming-group-assessments',
    ], 
    'faq_list' => [
      'variables' => [
          'data'=> null,
        ],
    'template'=>'custom/faq-list',
    ],  
    'bfss_manager' => [
      'variables' => [
          'data'=> null,
        ],
        'template'=>'custom/bfss-manager',
    ],
    'payment_receipts' => [
      'variables' => [
          'monthlisting'=> $month_options,
          'yearlisting'=> $year_options,
          'states'=> $states,
          'country'=> $country,
        ],
        'template'=>'custom/payment-receipts',
    ],
    /*'scheduled__appointments' => [
      'variables' => [
          'data'=> null,
        ],
        'template'=>'custom/scheduled--appointments',
    ],*/
	'scheduled__appointments' => [
        'variables' => ['name' => NULL,'assessments_block' => NULL,'month_block' => NULL],
		//'template' => 'upcoming',
        'template'=>'custom/scheduled--appointments',
    ],
  ];
}
/*function bfss_assessment_theme() {
  return array(
	'views_view_grid__assessments__block_1' => [
      'template' => 'views/views-view-grid--assessments--block_1',
      'base hook' => 'view',
    ],
    'views_view_grid__assessments__page_1' => [
      'template' => 'views/views-view-grid--assessments--page_1',
      'base hook' => 'view',
    ],
    'node__assessment' => [
      'template' => 'content/node--assessment',
      'base hook' => 'node',
    ],
  );
}


function bfss_assessment_entity_view_mode_alter(&$view_mode, Drupal\Core\Entity\EntityInterface $entity, $context) {
  if ($entity->getEntityTypeId() == 'node' && $entity->bundle() == 'assessment' && $view_mode == 'full') {
    $view_mode = 'modal';      
  }
}*/


/**
 * Implements hook_user_login().
 */
function bfss_assessment_user_login($account) {
	
    $current_user = \Drupal::currentUser();
    $roles = $current_user->getRoles();
    if(isset($roles) && in_array('athlete', $roles)){
	//	print $account->getLastAccessedTime();die;
	 $current_user = \Drupal::currentUser()->id();
	$query = \Drupal::database()->select('mydata', 'md');
    $query->fields('md');
    $query->condition('uid', $current_user,'=');
    $results = $query->execute()->fetchAssoc();
	if(empty($results)){
	//if(!empty($results['popup_flag']) && $results['popup_flag'] == 'filled'){
     // if($account->getLastAccessedTime() == '0'){
		 $response = new RedirectResponse("/dashboard/profile");
        $response->send();
        return;
         
      }else{
		if($results['popup_flag'] == ''){
			$response = new RedirectResponse("/dashboard/profile");
			$response->send();
			return;
		}else{
			$response = new RedirectResponse("/dashboard");
			$response->send();
			return;
		}
      }
    }

    if(isset($roles) && in_array('assessors', $roles)){
        $response = new RedirectResponse("/dashboard");
        $response->send();
        return;
    }
	
	if(isset($roles) && in_array('coach', $roles)){
		$response = new RedirectResponse("/dashboard");
        $response->send();
        return;
	}
	if(isset($roles) && in_array('bfss_manager', $roles)){
        $response = new RedirectResponse("/dashboard");
        $response->send();
        return;
    }

}